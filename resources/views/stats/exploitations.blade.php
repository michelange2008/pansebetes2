@extends('layouts.app')

@extends('menus.menuprincipal')

@section('contenu')
    <div class="container-fluid">

        <div class="my-3 justify-content-center row">

            <div class="col-sm-11 col-md-10 col-lg-9">

                @titre()

            </div>

        </div>

        <div class="my-3 justify-content-center row">

            <div class="col-sm-11 col-md-10 col-lg-9">

                <div class="row">

                    <div class="col-lg-6">

                        <div id="especes"></div>

                    </div>

                    <div class="col-lg-6">

                        <div id="sauGraph"></div>

                    </div>

                </div>

                <div class="my-3 row">

                    <div class="col-lg-6">

                        <div id="UTH"></div>
                        
                    </div>
                    
                    <div class="col-lg-6">
                        
                        <div id="signesQualite"></div>

                    </div>

                </div>
            </div>

        </div>
    </div>
@endsection

@section('scripts')
    <script src="https://code.highcharts.com/highcharts.js"></script>
    {{-- <script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script> --}}
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <script>
        var types_production = <?php echo $types_production; ?>;
        var sauGraph = <?php echo $sauGraph; ?>;
        var signesQualite = <?php echo $signesQualite; ?>;
        var uth = <?php echo $uth; ?>;

        Highcharts.chart('especes', {
            chart: {
                shadow: true,
                type: 'bar'
            },
            title: {
                text: types_production.title,
                align: 'left'
            },
            xAxis: {
                categories: types_production.especes,
                gridLineWidth: 1,
                lineWidth: 0
            },
            yAxis: {
                min: 0,
                title: {
                    text: types_production.xAxisTitle,
                    align: 'high'
                },
                label: {
                    overflow: 'justify'
                },
                gridLineWidth: 0
            },
            tooltip: {
                formatter: function() {
                    return this.x + ' : ' + Math.round(100 * this.y / types_production.total) + " %"
                },
                followPointer: true
            },
            plotOptions: {
                bar: {
                    borderRadius: '10%',
                    dataLabels: {
                        enabled: true,
                    },
                    groupePadding: 0.1
                }
            },
            legend: {
                enabled: false
            },
            colors: [
                "CornflowerBlue",
                "salmon",
                "Khaki",
            ],
            series: [{
                name: types_production.serieName,
                colorByPoint: true,
                data: types_production.totaux
            }]

        });


        Highcharts.chart('sauGraph', {
            chart: {
                backgroundColor: 'lightgrey',
                shadow: true,
                type: 'column'
            },
            title: {
                text: sauGraph.title,
                align: 'left'
            },
            xAxis: {
                categories: sauGraph.xCategories
            },
            yAxis: {
                min: 0,
                title: {
                    text: sauGraph.yAxisTitle,
                    align: 'middle'
                },
                label: {
                    overflow: 'justify'
                },
                gridLineWidth: 0
            },
            tooltip: {
                formatter: function() {
                    return this.x + ' : ' + Math.round(100 * this.y / sauGraph.total) + " %"
                },
                followPointer: true
            },
            plotOptions: {
                column: {
                    borderRadius: '10%',
                    dataLabels: {
                        enabled: true,
                    },
                    groupePadding: 0.1
                }
            },
            legend: {
                enabled: false
            },
            series: [{
                name: 'SAU',
                data: sauGraph.serie
            }]

        });

        // Make monochrome colors
        const colors = Highcharts.getOptions().colors.map((c, i) =>
            // Start out with a darkened base color (negative brighten), and end
            // up with a much brighter color
            Highcharts.color(Highcharts.getOptions().colors[0])
            .brighten((i - 3) / 7)
            .get()
        );

        Highcharts.chart('signesQualite', {
            chart: {
                shadow: true,
                type: 'pie'
            },
            title: {
                text: signesQualite.title,
                align: 'left'
            },
            tooltip: {
                pointFormat: '<b>{point.percentage:.1f}%</b>'
            },
            accessibility: {
                valueSuffix: '%'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    colors,
                    borderRadius: 5,
                    dataLabels: {
                        enabled: true,
                        distance: -50,
                        filter: {
                            property: 'percentage',
                            operator: '>',
                            value: 4
                        }
                    }

                }
            },
            series: [{
                type: 'pie',
                name: 'Signes de qualit√©',
                data: signesQualite.datas
            }]
        });

        Highcharts.chart('UTH', {
            chart: {
                backgroundColor: 'lightgrey',
                shadow: true,
                type: 'column'
            },
            title: {
                text: uth.title,
                align: 'left'
            },
            xAxis: {
                categories: uth.xCategories
            },
            yAxis: {
                min: 0,
                title: {
                    text: uth.yAxisTitle,
                    align: 'middle'
                },
                label: {
                    overflow: 'justify'
                },
                gridLineWidth: 0
            },
            tooltip: {
                formatter: function() {
                    return this.x + ' : ' + Math.round(100 * this.y / uth.total) + " %"
                },
                followPointer: true
            },
            plotOptions: {
                column: {
                    borderRadius: '10%',
                    dataLabels: {
                        enabled: true,
                    },
                    groupePadding: 0.1
                }
            },
            legend: {
                enabled: false
            },
            series: [{
                name: 'UTH',
                data: uth.serie
            }]

        });
    </script>
@endsection
